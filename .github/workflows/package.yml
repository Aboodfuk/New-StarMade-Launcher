name: 'Build and Upload'
on: workflow_dispatch
jobs:
    build-executables:
        name: 'Build Executables'
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ ubuntu-latest, windows-latest, macos-latest ]
                include:
                    -   os: 'ubuntu-latest'
                        label: 'Linux'
                    -   os: 'macos-latest'
                        label: 'MacOS'
                    -   os: 'windows-latest'
                        label: 'Windows'
        permissions:
            contents: write
            pull-requests: write
            repository-projects: write
        steps:
            -   name: 'Checkout'
                uses: actions/checkout@v4
            -   name: 'Setup GraalVM Environment'
                uses: DeLaGuardo/setup-graalvm@2.0
                with:
                    graalvm-version: '21.0.2.java21'
            -   name: 'Install Native Image Plugin'
                run: |
                    gu install native-image
            -   name: 'Build Jar'
                run: |
                    ./gradlew package
            -   name: 'Build Executable'
                run: |
                    native-image --no-server --no-fallback --allow-incomplete-classpath -jar ./lib/StarMade-Starter.jar
            -   name: 'Upload Build Artifacts'
                uses: actions/upload-artifact@v4
                with:
                    name: StarMade-Launcher-${{ matrix.label }}
                    path: ./release-builds
    publish-executables:
        name: 'Publish Executables'
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
            repository-projects: write
        needs: build-executables
        steps:
            -   name: 'Checkout'
                uses: actions/checkout@v3
            -   name: 'Download Build Artifacts (Linux)'
                uses: actions/download-artifact@v4
                with:
                    name: StarMade-Launcher-Linux
                    path: ./release-builds
                    merge-multiple: true
            -   name: 'Download Build Artifacts (Windows)'
                uses: actions/download-artifact@v4
                with:
                    name: StarMae-Launcher-Windows
                    path: ./release-builds
                    merge-multiple: true
            -   name: 'Download Build Artifacts (MacOS)'
                uses: actions/download-artifact@v4
                with:
                    name: StarMade-Launcher-MacOS
                    path: ./release-builds
                    merge-multiple: true
            -   name: 'Set Version Number'
                run: |
                    echo "VERSION=$(./gradlew properties -q | grep "version: " | awk '{print $2}')" >> $GITHUB_ENV
            -   name: 'Create Linux Archive'
                run: |
                    zip -r StarMade-Launcher-Linux.zip ./release-builds/StarMade-Launcher-Linux
            -   name: 'Create Windows Archive'
                run: |
                    zip -r StarMade-Launcher-Windows.zip ./release-builds/StarMade-Launher-Windows
            -   name: 'Create MacOS Archive'
                run: |
                    zip -r StarMade-Launcher-MacOS.zip ./release-builds/StarMade-Launcher-MacOS
            -   name: 'Create Release'
                id: create_release
                uses: actions/create-release@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: v${{ env.VERSION }}
                    release_name: v${{ env.VERSION }}
                    draft: true
                    prerelease: false
            -   name: 'Upload Release Asset (Ubuntu)'
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: StarMade-Launcher-Linux.zip
                    asset_name: StarMade-Launcher-Linux.zip
                    asset_content_type: application/zip
            -   name: 'Upload Release Asset (Windows)'
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: StarMade-Launcher-Windows.zip
                    asset_name: StarMade-Launcher-Windows.zip
                    asset_content_type: application/zip
            -   name: 'Upload Release Asset (MacOS)'
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: StarMade-Launcher-MacOS.zip
                    asset_name: StarMade-Launcher-MacOS.zip
                    asset_content_type: application/zip
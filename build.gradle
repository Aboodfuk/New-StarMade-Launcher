plugins {
	id "java"
	id "application"
	id 'com.github.johnrengelman.shadow' version "8.1.1"
}

group 'smlauncher'
mainClassName = 'smlauncher.StarMadeLauncher'
version = '3.1.7'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(18)
	}
}

application {
	mainClassName = 'smlauncher.StarMadeLauncher'
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url "https://plugins.gradle.org/m2/" }
	gradlePluginPortal()
}

dependencies {
	implementation 'com.formdev:flatlaf:3.5.1'
	implementation 'commons-io:commons-io:2.16.1'
	implementation 'it.unimi.dsi:fastutil:8.5.14'
	implementation 'org.codehaus.plexus:plexus-archiver:4.10.0'
	implementation 'org.jasypt:jasypt:1.9.3'
	implementation 'org.json:json:20240303'
	implementation 'org.panteleyev:jpackage-gradle-plugin:1.6.0'
}

var os = System.getProperty('os.name').toLowerCase()
if (os.contains('win')) os = 'Windows'
else if (os.contains('mac')) os = 'MacOS'
else os = 'Linux'

jar {
	manifest {
		attributes 'Main-Class': 'smlauncher.StarMadeLauncher'
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	archiveFileName = 'StarMade-Launcher.jar'
	destinationDirectory = file('release-builds/' + os + '/StarMade-Launcher/lib')
}

clean {
	delete 'release-builds'
}

tasks.register('package') {
	dependsOn(clean, jar)
	doLast {
		delete fileTree('release-builds/' + os).matching {
			include '**/*.ico'
			include '**/*.icns'
			include '**/*.png'
		}
		if (os == 'windows-latest') {
			copy {
				from 'StarMade-dedicated-server-windows.bat'
				into 'release-builds/' + os + '/StarMade-Launcher/'
			}
		}
		if (os == 'macos-latest') {
			copy {
				from 'StarMade-dedicated-server-macos.command'
				into 'release-builds/' + os + '/StarMade-Launcher/'
			}
//			exec {
//				commandLine 'mv', 'release-builds/' + os + '/StarMade-Launcher.app', 'release-builds/' + os + '/StarMade-Launcher/StarMade-Launcher.app'
//			}

			fileTree('release-builds/' + os + '/StarMade-Launcher').visit { FileVisitDetails details ->
				if (details.file.isFile()) {
					exec {
						commandLine 'chmod', '+x', details.file.absolutePath
						commandLine 'codesign', '--sign', '-', '--force', '--deep', '--timestamp', details.file.absolutePath
					}
				}
			}

//			exec {
//				commandLine 'xattr', '-cr', 'release-builds/' + os + '/StarMade-Launcher/StarMade-Launcher.app'
//			}

//			exec {
//				commandLine 'codesign', '--sign', '-', '--force', '--deep', '--timestamp', 'release-builds/' + os + '/StarMade-Launcher/StarMade-Launcher.app'
//			}
		}
		if (os == 'ubuntu-latest') {
			copy {
				from 'StarMade-dedicated-server-linux.sh'
				into 'release-builds/' + os + '/StarMade-Launcher/'
			}

			fileTree('release-builds/' + os + '/StarMade-Launcher').visit { FileVisitDetails details ->
				if (details.file.isFile()) {
					exec {
						commandLine 'chmod', '+x', details.file.absolutePath
					}
				}
			}

//			exec {
//				commandLine 'mv', 'release-builds/' + os + '/StarMade-Launcher/bin/StarMade-Launcher', 'release-builds/' + os + '/StarMade-Launcher/StarMade-Launcher'
//			}
		}
	}
}
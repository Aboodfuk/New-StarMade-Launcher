plugins {
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'maven-publish'
}

targetCompatibility = 11
sourceCompatibility = 11

group 'smlauncher'
mainClassName = 'smlauncher.StarMadeLauncher'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.formdev:flatlaf:3.0'
    implementation group: 'org.json', name: 'json', version: '20230227'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.jasypt:jasypt:1.9.3'
    implementation 'it.unimi.dsi:fastutil:8.5.12'
}

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "StarMade Launcher Repository"
            url = uri("") //Todo: Add repo url
        }
    }
}
 */

tasks.register('all_jar', Jar) {
    dependsOn('win_jar')
    dependsOn('linux_jar')
    dependsOn('mac_jar')
}

tasks.register('win_jar', Jar) {
    manifest {
        attributes 'Main-Class': 'smlauncher.StarMadeLauncher'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    destinationDirectory.set(file("./release-builds/StarMade Launcher-win32-ia32"))

    setArchivesBaseName("starmade-launcher")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from(sourceSets.main.output)
    from('resources/Updater.jar') {
        into 'Updater.jar'
    }
}

tasks.register('linux_jar', Jar) {
    manifest {
        attributes 'Main-Class': 'smlauncher.StarMadeLauncher'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    destinationDirectory.set(file("./release-builds/StarMade Launcher-linux-x64"))

    setArchivesBaseName("starmade-launcher")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from(sourceSets.main.output)
    from('resources/Updater.jar') {
        into 'Updater.jar'
    }
}

tasks.register('mac_jar', Jar) {
    manifest {
        attributes 'Main-Class': 'smlauncher.StarMadeLauncher'
    }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    destinationDirectory.set(file("./release-builds/StarMade Launcher-darwin-x64"))

    setArchivesBaseName("starmade-launcher")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from(sourceSets.main.output)
    from('resources/Updater.jar') {
        into 'Updater.jar'
    }
}